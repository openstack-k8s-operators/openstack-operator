apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: swiftproxies.swift.openstack.org
spec:
  group: swift.openstack.org
  names:
    kind: SwiftProxy
    listKind: SwiftProxyList
    plural: swiftproxies
    singular: swiftproxy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: NetworkAttachments
      jsonPath: .status.networkAttachments
      name: NetworkAttachments
      type: string
    - description: Status
      jsonPath: .status.conditions[0].status
      name: Status
      type: string
    - description: Message
      jsonPath: .status.conditions[0].message
      name: Message
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: SwiftProxy is the Schema for the swiftproxies API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SwiftProxySpec defines the desired state of SwiftProxy
            properties:
              ceilometerEnabled:
                default: false
                description: Enables ceilometer in the swift proxy and creates required
                  resources
                type: boolean
              containerImageProxy:
                description: Swift Proxy Container Image URL
                type: string
              defaultConfigOverwrite:
                additionalProperties:
                  type: string
                description: |-
                  DefaultConfigOverwrite - can be used to add additionalfiles. Those get
                  added to the service config dir in /etc/<servicename>-conf.d
                type: object
              encryptionEnabled:
                default: false
                description: Encrypts new objects at rest
                type: boolean
              memcachedInstance:
                default: memcached
                description: Memcached instance name.
                type: string
              networkAttachments:
                description: NetworkAttachments is a list of NetworkAttachment resource
                  names to expose the services to the given network
                items:
                  type: string
                type: array
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector to target subset of worker nodes running
                  this service
                type: object
              override:
                description: Override, provides the ability to override the generated
                  manifest of several child resources.
                properties:
                  service:
                    additionalProperties:
                      description: |-
                        RoutedOverrideSpec - a routed service override configuration for the Service created to serve traffic
                        to the cluster. Allows for the manifest of the created Service to be overwritten with custom configuration.
                      properties:
                        endpointURL:
                          type: string
                        metadata:
                          description: |-
                            EmbeddedLabelsAnnotations is an embedded subset of the fields included in k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta.
                            Only labels and annotations are included.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: |-
                                Annotations is an unstructured key value map stored with a resource that may be
                                set by external tools to store and retrieve arbitrary metadata. They are not
                                queryable and should be preserved when modifying objects.
                                More info: http://kubernetes.io/docs/user-guide/annotations
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: |-
                                Map of string keys and values that can be used to organize and categorize
                                (scope and select) objects. May match selectors of replication controllers
                                and services.
                                More info: http://kubernetes.io/docs/user-guide/labels
                              type: object
                          type: object
                        spec:
                          description: |-
                            OverrideServiceSpec is a subset of the fields included in https://pkg.go.dev/k8s.io/api@v0.26.6/core/v1#ServiceSpec
                            Limited to Type, SessionAffinity, LoadBalancerSourceRanges, ExternalName, ExternalTrafficPolicy, SessionAffinityConfig,
                            IPFamilyPolicy, LoadBalancerClass and InternalTrafficPolicy
                          properties:
                            externalName:
                              description: |-
                                externalName is the external reference that discovery mechanisms will
                                return as an alias for this service (e.g. a DNS CNAME record). No
                                proxying will be involved.  Must be a lowercase RFC-1123 hostname
                                (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
                              type: string
                            externalTrafficPolicy:
                              description: |-
                                externalTrafficPolicy describes how nodes distribute service traffic they
                                receive on one of the Service's "externally-facing" addresses (NodePorts,
                                ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
                                the service in a way that assumes that external load balancers will take care
                                of balancing the service traffic between nodes, and so each node will deliver
                                traffic only to the node-local endpoints of the service, without masquerading
                                the client source IP. (Traffic mistakenly sent to a node with no endpoints will
                                be dropped.) The default value, "Cluster", uses the standard behavior of
                                routing to all endpoints evenly (possibly modified by topology and other
                                features). Note that traffic sent to an External IP or LoadBalancer IP from
                                within the cluster will always get "Cluster" semantics, but clients sending to
                                a NodePort from within the cluster may need to take traffic policy into account
                                when picking a node.
                              type: string
                            internalTrafficPolicy:
                              description: |-
                                InternalTrafficPolicy describes how nodes distribute service traffic they
                                receive on the ClusterIP. If set to "Local", the proxy will assume that pods
                                only want to talk to endpoints of the service on the same node as the pod,
                                dropping the traffic if there are no local endpoints. The default value,
                                "Cluster", uses the standard behavior of routing to all endpoints evenly
                                (possibly modified by topology and other features).
                              type: string
                            ipFamilyPolicy:
                              description: |-
                                IPFamilyPolicy represents the dual-stack-ness requested or required by
                                this Service. If there is no value provided, then this field will be set
                                to SingleStack. Services can be "SingleStack" (a single IP family),
                                "PreferDualStack" (two IP families on dual-stack configured clusters or
                                a single IP family on single-stack clusters), or "RequireDualStack"
                                (two IP families on dual-stack configured clusters, otherwise fail). The
                                ipFamilies and clusterIPs fields depend on the value of this field. This
                                field will be wiped when updating a service to type ExternalName.
                              type: string
                            loadBalancerClass:
                              description: |-
                                loadBalancerClass is the class of the load balancer implementation this Service belongs to.
                                If specified, the value of this field must be a label-style identifier, with an optional prefix,
                                e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
                                This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
                                balancer implementation is used, today this is typically done through the cloud provider integration,
                                but should apply for any default implementation. If set, it is assumed that a load balancer
                                implementation is watching for Services with a matching class. Any default load balancer
                                implementation (e.g. cloud providers) should ignore Services that set this field.
                                This field can only be set when creating or updating a Service to type 'LoadBalancer'.
                                Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
                              type: string
                            loadBalancerSourceRanges:
                              description: |-
                                If specified and supported by the platform, this will restrict traffic through the cloud-provider
                                load-balancer will be restricted to the specified client IPs. This field will be ignored if the
                                cloud-provider does not support the feature."
                                More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            sessionAffinity:
                              description: |-
                                Supports "ClientIP" and "None". Used to maintain session affinity.
                                Enable client IP based session affinity.
                                Must be ClientIP or None.
                                Defaults to None.
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                              type: string
                            sessionAffinityConfig:
                              description: sessionAffinityConfig contains the configurations
                                of session affinity.
                              properties:
                                clientIP:
                                  description: clientIP contains the configurations
                                    of Client IP based session affinity.
                                  properties:
                                    timeoutSeconds:
                                      description: |-
                                        timeoutSeconds specifies the seconds of ClientIP type session sticky time.
                                        The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
                                        Default value is 10800(for 3 hours).
                                      format: int32
                                      type: integer
                                  type: object
                              type: object
                            type:
                              description: |-
                                type determines how the Service is exposed. Defaults to ClusterIP. Valid
                                options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
                                "ClusterIP" allocates a cluster-internal IP address for load-balancing
                                to endpoints. Endpoints are determined by the selector or if that is not
                                specified, by manual construction of an Endpoints object or
                                EndpointSlice objects. If clusterIP is "None", no virtual IP is
                                allocated and the endpoints are published as a set of endpoints rather
                                than a virtual IP.
                                "NodePort" builds on ClusterIP and allocates a port on every node which
                                routes to the same endpoints as the clusterIP.
                                "LoadBalancer" builds on NodePort and creates an external load-balancer
                                (if supported in the current cloud) which routes to the same endpoints
                                as the clusterIP.
                                "ExternalName" aliases this service to the specified externalName.
                                Several other fields do not apply to ExternalName services.
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                              type: string
                          type: object
                      type: object
                    description: |-
                      Override configuration for the Service created to serve traffic to the cluster.
                      The key must be the endpoint type (public, internal)
                    type: object
                type: object
              passwordSelectors:
                default:
                  service: SwiftPassword
                description: PasswordSelector - Selector to choose the Swift user
                  password from the Secret
                properties:
                  service:
                    default: SwiftPassword
                    description: Service - Selector to get the Swift service password
                      from the Secret
                    type: string
                type: object
              rabbitMqClusterName:
                default: rabbitmq
                description: RabbitMQ instance name to request a transportURL for
                  Ceilometer middleware
                type: string
              replicas:
                default: 1
                description: Replicas of Swift Proxy
                format: int32
                minimum: 0
                type: integer
              ringConfigMaps:
                default:
                - swift-ring-files
                description: List of ring ConfigMaps
                items:
                  type: string
                type: array
                x-kubernetes-list-type: atomic
              secret:
                default: osp-secret
                description: Secret containing OpenStack password information for
                  Swift service user password
                type: string
              serviceUser:
                default: swift
                description: ServiceUser - optional username used for this service
                  to register in Swift
                type: string
              tls:
                description: TLS - Parameters related to the TLS
                properties:
                  api:
                    description: API tls type which encapsulates for API services
                    properties:
                      internal:
                        description: Internal GenericService - holds the secret for
                          the internal endpoint
                        properties:
                          secretName:
                            description: SecretName - holding the cert, key for the
                              service
                            type: string
                        type: object
                      public:
                        description: Public GenericService - holds the secret for
                          the public endpoint
                        properties:
                          secretName:
                            description: SecretName - holding the cert, key for the
                              service
                            type: string
                        type: object
                    type: object
                  caBundleSecretName:
                    description: CaBundleSecretName - holding the CA certs in a pre-created
                      bundle file
                    type: string
                type: object
              topologyRef:
                description: |-
                  TopologyRef to apply the Topology defined by the associated CR referenced
                  by name
                properties:
                  name:
                    description: Name - The Topology CR name that the Service references
                    type: string
                  namespace:
                    description: |-
                      Namespace - The Namespace to fetch the Topology CR referenced
                      NOTE: Namespace currently points by default to the same namespace where
                      the Service is deployed. Customizing the namespace is not supported and
                      webhooks prevent editing this field to a value different from the
                      current project
                    type: string
                type: object
            required:
            - containerImageProxy
            - memcachedInstance
            - rabbitMqClusterName
            - replicas
            - secret
            - serviceUser
            type: object
          status:
            description: SwiftProxyStatus defines the observed state of SwiftProxy
            properties:
              conditions:
                description: Conditions
                items:
                  description: Condition defines an observation of a API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: |-
                        Severity provides a classification of Reason code, so the current situation is immediately
                        understandable and could act accordingly.
                        It is meant for situations where Status=False and it should be indicated if it is just
                        informational, warning (next reconciliation might fix it) or an error (e.g. DB create issue
                        and no actions to automatically resolve the issue can/should be done).
                        For conditions where Status=Unknown or Status=True the Severity should be SeverityNone.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              hash:
                additionalProperties:
                  type: string
                description: Map of hashes to track e.g. job status
                type: object
              lastAppliedTopology:
                description: LastAppliedTopology - the last applied Topology
                properties:
                  name:
                    description: Name - The Topology CR name that the Service references
                    type: string
                  namespace:
                    description: |-
                      Namespace - The Namespace to fetch the Topology CR referenced
                      NOTE: Namespace currently points by default to the same namespace where
                      the Service is deployed. Customizing the namespace is not supported and
                      webhooks prevent editing this field to a value different from the
                      current project
                    type: string
                type: object
              networkAttachments:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: NetworkAttachments status of the deployment pods
                type: object
              observedGeneration:
                description: |-
                  ObservedGeneration - the most recent generation observed for this
                  service. If the observed generation is less than the spec generation,
                  then the controller has not processed the latest changes injected by
                  the openstack-operator in the top-level CR (e.g. the ContainerImage)
                format: int64
                type: integer
              readyCount:
                description: ReadyCount of SwiftProxy instances
                format: int32
                type: integer
              transportURLSecret:
                description: TransportURLSecret - Secret containing RabbitMQ transportURL
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
