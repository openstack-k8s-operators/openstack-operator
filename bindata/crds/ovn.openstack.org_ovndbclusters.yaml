apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: ovndbclusters.ovn.openstack.org
spec:
  group: ovn.openstack.org
  names:
    kind: OVNDBCluster
    listKind: OVNDBClusterList
    plural: ovndbclusters
    singular: ovndbcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: NetworkAttachments
      jsonPath: .status.networkAttachments
      name: NetworkAttachments
      type: string
    - description: Status
      jsonPath: .status.conditions[0].status
      name: Status
      type: string
    - description: Message
      jsonPath: .status.conditions[0].message
      name: Message
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: OVNDBCluster is the Schema for the ovndbclusters API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OVNDBClusterSpec defines the desired state of OVNDBCluster
            properties:
              containerImage:
                description: ContainerImage - Container Image URL (will be set to
                  environmental default if empty)
                type: string
              dbType:
                default: NB
                description: DBType - NB or SB
                pattern: ^NB|SB$
                type: string
              electionTimer:
                default: 10000
                description: OVN Northbound and Southbound RAFT db election timer
                  to use on db creation (in milliseconds)
                format: int32
                type: integer
              exporterImage:
                description: ExporterImage - Container Image URL for the openstack-network-exporter
                  metrics sidecar (will be set to environmental default if empty)
                type: string
              inactivityProbe:
                default: 60000
                description: Probe interval for the OVSDB session (in milliseconds)
                format: int32
                type: integer
              logLevel:
                default: info
                description: LogLevel - Set log level info, dbg, emer etc
                type: string
              metricsEnabled:
                default: true
                description: MetricsEnabled enables the metrics sidecar container
                  for collecting OVN DB metrics
                type: boolean
              networkAttachment:
                description: |-
                  NetworkAttachment is a NetworkAttachment resource name to expose the service to the given network.
                  If specified the IP address of this network is used as the dbAddress connection.
                type: string
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector to target subset of worker nodes running
                  this service
                type: object
              override:
                description: Override, provides the ability to override the generated
                  manifest of several child resources.
                properties:
                  service:
                    description: Override configuration for the Service created to
                      serve traffic to the cluster.
                    properties:
                      metadata:
                        description: |-
                          EmbeddedLabelsAnnotations is an embedded subset of the fields included in k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta.
                          Only labels and annotations are included.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              Annotations is an unstructured key value map stored with a resource that may be
                              set by external tools to store and retrieve arbitrary metadata. They are not
                              queryable and should be preserved when modifying objects.
                              More info: http://kubernetes.io/docs/user-guide/annotations
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              Map of string keys and values that can be used to organize and categorize
                              (scope and select) objects. May match selectors of replication controllers
                              and services.
                              More info: http://kubernetes.io/docs/user-guide/labels
                            type: object
                        type: object
                      spec:
                        description: |-
                          OverrideServiceSpec is a subset of the fields included in https://pkg.go.dev/k8s.io/api@v0.26.6/core/v1#ServiceSpec
                          Limited to Type, SessionAffinity, LoadBalancerSourceRanges, ExternalName, ExternalTrafficPolicy, SessionAffinityConfig,
                          IPFamilyPolicy, LoadBalancerClass and InternalTrafficPolicy
                        properties:
                          externalName:
                            description: |-
                              externalName is the external reference that discovery mechanisms will
                              return as an alias for this service (e.g. a DNS CNAME record). No
                              proxying will be involved.  Must be a lowercase RFC-1123 hostname
                              (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
                            type: string
                          externalTrafficPolicy:
                            description: |-
                              externalTrafficPolicy describes how nodes distribute service traffic they
                              receive on one of the Service's "externally-facing" addresses (NodePorts,
                              ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
                              the service in a way that assumes that external load balancers will take care
                              of balancing the service traffic between nodes, and so each node will deliver
                              traffic only to the node-local endpoints of the service, without masquerading
                              the client source IP. (Traffic mistakenly sent to a node with no endpoints will
                              be dropped.) The default value, "Cluster", uses the standard behavior of
                              routing to all endpoints evenly (possibly modified by topology and other
                              features). Note that traffic sent to an External IP or LoadBalancer IP from
                              within the cluster will always get "Cluster" semantics, but clients sending to
                              a NodePort from within the cluster may need to take traffic policy into account
                              when picking a node.
                            type: string
                          internalTrafficPolicy:
                            description: |-
                              InternalTrafficPolicy describes how nodes distribute service traffic they
                              receive on the ClusterIP. If set to "Local", the proxy will assume that pods
                              only want to talk to endpoints of the service on the same node as the pod,
                              dropping the traffic if there are no local endpoints. The default value,
                              "Cluster", uses the standard behavior of routing to all endpoints evenly
                              (possibly modified by topology and other features).
                            type: string
                          ipFamilyPolicy:
                            description: |-
                              IPFamilyPolicy represents the dual-stack-ness requested or required by
                              this Service. If there is no value provided, then this field will be set
                              to SingleStack. Services can be "SingleStack" (a single IP family),
                              "PreferDualStack" (two IP families on dual-stack configured clusters or
                              a single IP family on single-stack clusters), or "RequireDualStack"
                              (two IP families on dual-stack configured clusters, otherwise fail). The
                              ipFamilies and clusterIPs fields depend on the value of this field. This
                              field will be wiped when updating a service to type ExternalName.
                            type: string
                          loadBalancerClass:
                            description: |-
                              loadBalancerClass is the class of the load balancer implementation this Service belongs to.
                              If specified, the value of this field must be a label-style identifier, with an optional prefix,
                              e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
                              This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
                              balancer implementation is used, today this is typically done through the cloud provider integration,
                              but should apply for any default implementation. If set, it is assumed that a load balancer
                              implementation is watching for Services with a matching class. Any default load balancer
                              implementation (e.g. cloud providers) should ignore Services that set this field.
                              This field can only be set when creating or updating a Service to type 'LoadBalancer'.
                              Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
                            type: string
                          loadBalancerSourceRanges:
                            description: |-
                              If specified and supported by the platform, this will restrict traffic through the cloud-provider
                              load-balancer will be restricted to the specified client IPs. This field will be ignored if the
                              cloud-provider does not support the feature."
                              More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          sessionAffinity:
                            description: |-
                              Supports "ClientIP" and "None". Used to maintain session affinity.
                              Enable client IP based session affinity.
                              Must be ClientIP or None.
                              Defaults to None.
                              More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                            type: string
                          sessionAffinityConfig:
                            description: sessionAffinityConfig contains the configurations
                              of session affinity.
                            properties:
                              clientIP:
                                description: clientIP contains the configurations
                                  of Client IP based session affinity.
                                properties:
                                  timeoutSeconds:
                                    description: |-
                                      timeoutSeconds specifies the seconds of ClientIP type session sticky time.
                                      The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
                                      Default value is 10800(for 3 hours).
                                    format: int32
                                    type: integer
                                type: object
                            type: object
                          type:
                            description: |-
                              type determines how the Service is exposed. Defaults to ClusterIP. Valid
                              options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
                              "ClusterIP" allocates a cluster-internal IP address for load-balancing
                              to endpoints. Endpoints are determined by the selector or if that is not
                              specified, by manual construction of an Endpoints object or
                              EndpointSlice objects. If clusterIP is "None", no virtual IP is
                              allocated and the endpoints are published as a set of endpoints rather
                              than a virtual IP.
                              "NodePort" builds on ClusterIP and allocates a port on every node which
                              routes to the same endpoints as the clusterIP.
                              "LoadBalancer" builds on NodePort and creates an external load-balancer
                              (if supported in the current cloud) which routes to the same endpoints
                              as the clusterIP.
                              "ExternalName" aliases this service to the specified externalName.
                              Several other fields do not apply to ExternalName services.
                              More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                            type: string
                        type: object
                    type: object
                type: object
              probeIntervalToActive:
                default: 60000
                description: Active probe interval from standby to active ovsdb-server
                  remote
                format: int32
                type: integer
              replicas:
                default: 1
                description: Replicas of OVN DBCluster to run
                format: int32
                maximum: 32
                minimum: 0
                type: integer
              resources:
                description: |-
                  Resources - Compute Resources required by this service (Limits/Requests).
                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.


                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.


                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              storageClass:
                description: StorageClass
                type: string
              storageRequest:
                description: StorageRequest
                type: string
              tls:
                description: TLS - Parameters related to TLS
                properties:
                  caBundleSecretName:
                    description: CaBundleSecretName - holding the CA certs in a pre-created
                      bundle file
                    type: string
                  secretName:
                    description: SecretName - holding the cert, key for the service
                    type: string
                type: object
              topologyRef:
                description: |-
                  TopologyRef to apply the Topology defined by the associated CR referenced
                  by name
                properties:
                  name:
                    description: Name - The Topology CR name that the Service references
                    type: string
                  namespace:
                    description: |-
                      Namespace - The Namespace to fetch the Topology CR referenced
                      NOTE: Namespace currently points by default to the same namespace where
                      the Service is deployed. Customizing the namespace is not supported and
                      webhooks prevent editing this field to a value different from the
                      current project
                    type: string
                type: object
            required:
            - containerImage
            - dbType
            - storageRequest
            type: object
          status:
            description: OVNDBClusterStatus defines the observed state of OVNDBCluster
            properties:
              conditions:
                description: Conditions
                items:
                  description: Condition defines an observation of a API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: |-
                        Severity provides a classification of Reason code, so the current situation is immediately
                        understandable and could act accordingly.
                        It is meant for situations where Status=False and it should be indicated if it is just
                        informational, warning (next reconciliation might fix it) or an error (e.g. DB create issue
                        and no actions to automatically resolve the issue can/should be done).
                        For conditions where Status=Unknown or Status=True the Severity should be SeverityNone.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              dbAddress:
                description: DBAddress - DB IP address used by external nodes
                type: string
              hash:
                additionalProperties:
                  type: string
                description: Map of hashes to track e.g. job status
                type: object
              internalDbAddress:
                description: InternalDBAddress - DB IP address used by other Pods
                  in the cluster
                type: string
              lastAppliedTopology:
                description: LastAppliedTopology - the last applied Topology
                properties:
                  name:
                    description: Name - The Topology CR name that the Service references
                    type: string
                  namespace:
                    description: |-
                      Namespace - The Namespace to fetch the Topology CR referenced
                      NOTE: Namespace currently points by default to the same namespace where
                      the Service is deployed. Customizing the namespace is not supported and
                      webhooks prevent editing this field to a value different from the
                      current project
                    type: string
                type: object
              networkAttachments:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: NetworkAttachments status of the deployment pods
                type: object
              observedGeneration:
                description: ObservedGeneration - the most recent generation observed
                  for this service. If the observed generation is less than the spec
                  generation, then the controller has not processed the latest changes.
                format: int64
                type: integer
              readyCount:
                description: ReadyCount of OVN DBCluster instances
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
