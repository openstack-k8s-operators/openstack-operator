apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  creationTimestamp: null
  name: designatecentrals.designate.openstack.org
spec:
  group: designate.openstack.org
  names:
    kind: DesignateCentral
    listKind: DesignateCentralList
    plural: designatecentrals
    singular: designatecentral
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: NetworkAttachments
      jsonPath: .status.networkAttachments
      name: NetworkAttachments
      type: string
    - description: Status
      jsonPath: .status.conditions[0].status
      name: Status
      type: string
    - description: Message
      jsonPath: .status.conditions[0].message
      name: Message
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: DesignateCentral is the Schema for the designatecentral API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DesignateCentralSpec defines the input parameters for the
              Designate Central service
            properties:
              backendMdnsServerProtocol:
                description: |-
                  BackendTypeProtocol - Defines the backend protocol to be used between the designate-worker &
                  designate_mdns to/from the DNS server. Acceptable values are: "UDP", "TCP"
                  Please Note: this MUST match what is in the /etc/designate.conf ['service:mdns']
                type: string
              backendType:
                description: |-
                  BackendType - Defines the backend service/configuration we are using, i.e. bind9, PowerDNS, BYO, etc..
                  Helps maintain a single init container/init.sh to do container setup
                type: string
              backendWorkerServerProtocol:
                description: |-
                  BackendTypeProtocol - Defines the backend protocol to be used between the designate-worker &
                  designate_mdns to/from the DNS server. Acceptable values are: "UDP", "TCP"
                  Please Note: this MUST match what is in the /etc/designate.conf ['service:worker']
                type: string
              containerImage:
                description: ContainerImage - Designate Container Image URL (will
                  be set to environmental default if empty)
                type: string
              customServiceConfig:
                description: |-
                  CustomServiceConfig - customize the service config using this parameter to change service defaults,
                  or overwrite rendered information using raw OpenStack config format. The content gets added to
                  to /etc/<service>/<service>.conf.d directory as a custom config file.
                type: string
              customServiceConfigSecrets:
                description: |-
                  CustomServiceConfigSecrets - customize the service config using this parameter to specify Secrets
                  that contain sensitive service config data. The content of each Secret gets added to the
                  /etc/<service>/<service>.conf.d directory as a custom config file.
                items:
                  type: string
                type: array
              databaseAccount:
                default: designate
                description: DatabaseAccount - name of MariaDBAccount which will be
                  used to connect.
                type: string
              databaseHostname:
                description: DatabaseHostname - Designate Database Hostname
                type: string
              defaultConfigOverwrite:
                additionalProperties:
                  type: string
                description: |-
                  ConfigOverwrite - interface to overwrite default config files like e.g. policy.json.
                  But can also be used to add additional files. Those get added to the service config dir in /etc/<service> .
                type: object
              networkAttachments:
                description: NetworkAttachments is a list of NetworkAttachment resource
                  names to expose the services to the given network
                items:
                  type: string
                type: array
              nodeSelector:
                additionalProperties:
                  type: string
                description: |-
                  NodeSelector to target subset of worker nodes running this service. Setting here overrides
                  any global NodeSelector settings within the Designate CR.
                type: object
              passwordSelectors:
                default:
                  service: DesignatePassword
                description: PasswordSelectors - Selectors to identify the DB and
                  ServiceUser password from the Secret
                properties:
                  service:
                    default: DesignatePassword
                    description: Service - Selector to get the designate service password
                      from the Secret
                    type: string
                type: object
              redisHostIPs:
                description: List of Redis Host IP addresses
                items:
                  type: string
                type: array
                x-kubernetes-list-type: atomic
              replicas:
                default: 1
                description: Replicas - Designate Central Replicas
                format: int32
                maximum: 32
                minimum: 0
                type: integer
              resources:
                description: |-
                  Resources - Compute Resources required by this service (Limits/Requests).
                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              secret:
                description: Secret containing OpenStack password information for
                  DesignatePassword
                type: string
              serviceAccount:
                description: ServiceAccount - service account name used internally
                  to provide Designate services the default SA name
                type: string
              serviceUser:
                default: designate
                description: ServiceUser - optional username used for this service
                  to register in designate
                type: string
              tls:
                description: TLS - Parameters related to the TLS
                properties:
                  caBundleSecretName:
                    description: CaBundleSecretName - holding the CA certs in a pre-created
                      bundle file
                    type: string
                type: object
              topologyRef:
                description: |-
                  TopologyRef to apply the Topology defined by the associated CR referenced
                  by name
                properties:
                  name:
                    description: Name - The Topology CR name that the Service references
                    type: string
                  namespace:
                    description: |-
                      Namespace - The Namespace to fetch the Topology CR referenced
                      NOTE: Namespace currently points by default to the same namespace where
                      the Service is deployed. Customizing the namespace is not supported and
                      webhooks prevent editing this field to a value different from the
                      current project
                    type: string
                type: object
              transportURLSecret:
                description: Secret containing RabbitMq transport URL
                type: string
            required:
            - containerImage
            type: object
          status:
            description: DesignateCentralStatus defines the observed state of DesignateCentral
            properties:
              conditions:
                description: Conditions
                items:
                  description: Condition defines an observation of a API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: |-
                        Severity provides a classification of Reason code, so the current situation is immediately
                        understandable and could act accordingly.
                        It is meant for situations where Status=False and it should be indicated if it is just
                        informational, warning (next reconciliation might fix it) or an error (e.g. DB create issue
                        and no actions to automatically resolve the issue can/should be done).
                        For conditions where Status=Unknown or Status=True the Severity should be SeverityNone.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              hash:
                additionalProperties:
                  type: string
                description: Map of hashes to track e.g. job status
                type: object
              lastAppliedTopology:
                description: LastAppliedTopology - the last applied Topology
                properties:
                  name:
                    description: Name - The Topology CR name that the Service references
                    type: string
                  namespace:
                    description: |-
                      Namespace - The Namespace to fetch the Topology CR referenced
                      NOTE: Namespace currently points by default to the same namespace where
                      the Service is deployed. Customizing the namespace is not supported and
                      webhooks prevent editing this field to a value different from the
                      current project
                    type: string
                type: object
              networkAttachments:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: NetworkAttachments status of the deployment pods
                type: object
              observedGeneration:
                description: |-
                  ObservedGeneration - the most recent generation observed for this
                  service. If the observed generation is less than the spec generation,
                  then the controller has not processed the latest changes injected by
                  the opentack-operator in the top-level CR (e.g. the ContainerImage)
                format: int64
                type: integer
              readyCount:
                description: ReadyCount of designate central instances
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
