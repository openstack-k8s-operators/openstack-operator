apiVersion: v1
kind: Secret
metadata:
  name: cert-tls-dnsnames-default-edpm-compute-0
  annotations:
    cert-manager.io/certificate-name: tls-dnsnames-default-edpm-compute-0
    cert-manager.io/issuer-group: cert-manager.io
    cert-manager.io/issuer-kind: Issuer
    cert-manager.io/issuer-name: rootca-internal
  labels:
    hostname: edpm-compute-0
    osdp-service: tls-dnsnames
    osdp-service-cert-key: default
    osdpns: openstack-edpm-tls
type: kubernetes.io/tls
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    hostname: edpm-compute-0
    osdp-service: tls-dnsnames
    osdp-service-cert-key: default
    osdpns: openstack-edpm-tls
  name: tls-dnsnames-default-edpm-compute-0
  namespace: openstack-kuttl-tests
  ownerReferences:
  - apiVersion: dataplane.openstack.org/v1beta1
    kind: OpenStackDataPlaneNodeSet
    name: openstack-edpm-tls
spec:
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: rootca-internal
  secretName: cert-tls-dnsnames-default-edpm-compute-0
  secretTemplate:
    labels:
      hostname: edpm-compute-0
      osdp-service: tls-dnsnames
      osdpns: openstack-edpm-tls
---
# validate the alt-names and usages - which is a list with elements that can be in any order
apiVersion: kuttl.dev/v1beta1
kind: TestAssert
commands:
  - script: |
      template='{{index .spec.dnsNames }}'
      names=$(oc get certificate tls-dnsnames-default-edpm-compute-0 -n openstack-kuttl-tests -o go-template="$template")
      echo $names > test123.data
      regex="(?=.*(edpm-compute-0\.internalapi\.example\.com))(?=.*(edpm-compute-0\.storage\.example\.com))(?=.*(edpm-compute-0\.tenant\.example\.com))(?=.*(edpm-compute-0\.ctlplane\.example\.com))"
      matches=$(grep -P "$regex" test123.data)
      rm test123.data
      if [ -z "$matches" ]; then
         echo "bad dnsnames match: $names"
         exit 1
      else
         exit 0
      fi
  - script: |
      template='{{index .spec.usages }}'
      usages=$(oc get certificate tls-dnsnames-default-edpm-compute-0 -n openstack-kuttl-tests -o go-template="$template")
      echo $usages > test123.data
      regex="(?=.*(key encipherment))(?=.*(digital signature))(?=.*(server auth))"
      matches=$(grep -P "$regex" test123.data)
      rm test123.data
      if [ -z "$matches" ]; then
         echo "bad usages match: $usages"
         exit 1
      else
         exit 0
      fi
---
apiVersion: v1
kind: Secret
metadata:
  name: cert-tls-dnsnames-second-edpm-compute-0
  annotations:
    cert-manager.io/certificate-name: tls-dnsnames-second-edpm-compute-0
    cert-manager.io/issuer-group: cert-manager.io
    cert-manager.io/issuer-kind: Issuer
    cert-manager.io/issuer-name: rootca-internal
  labels:
    hostname: edpm-compute-0
    osdp-service: tls-dnsnames
    osdp-service-cert-key: second
    osdpns: openstack-edpm-tls
type: kubernetes.io/tls
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    hostname: edpm-compute-0
    osdp-service: tls-dnsnames
    osdp-service-cert-key: second
    osdpns: openstack-edpm-tls
  name: tls-dnsnames-second-edpm-compute-0
  namespace: openstack-kuttl-tests
  ownerReferences:
  - apiVersion: dataplane.openstack.org/v1beta1
    kind: OpenStackDataPlaneNodeSet
    name: openstack-edpm-tls
spec:
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: rootca-internal
  secretName: cert-tls-dnsnames-second-edpm-compute-0
  secretTemplate:
    labels:
      hostname: edpm-compute-0
      osdp-service: tls-dnsnames
      osdpns: openstack-edpm-tls
---
apiVersion: v1
kind: Secret
metadata:
  name: openstack-edpm-tls-tls-dnsnames-default-certs-0
  ownerReferences:
  - apiVersion: dataplane.openstack.org/v1beta1
    kind: OpenStackDataPlaneNodeSet
    name: openstack-edpm-tls
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: openstack-edpm-tls-tls-dnsnames-second-certs-0
  ownerReferences:
  - apiVersion: dataplane.openstack.org/v1beta1
    kind: OpenStackDataPlaneNodeSet
    name: openstack-edpm-tls
type: Opaque
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: openstackansibleee
    openstackdataplanedeployment: openstack-edpm-tls
    openstackdataplanenodeset: openstack-edpm-tls
    openstackdataplaneservice: install-certs-ovrd
  name: install-certs-ovrd-openstack-edpm-tls-openstack-edpm-tls
  namespace: openstack-kuttl-tests
  ownerReferences:
  - apiVersion: dataplane.openstack.org/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: OpenStackDataPlaneDeployment
    name: openstack-edpm-tls
spec:
  backoffLimit: 6
  completionMode: NonIndexed
  completions: 1
  manualSelector: false
  parallelism: 1
  podReplacementPolicy: TerminatingOrFailed
  suspend: false
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: '[]'
      creationTimestamp: null
      labels:
        app: openstackansibleee
        batch.kubernetes.io/job-name: install-certs-ovrd-openstack-edpm-tls-openstack-edpm-tls
        openstackdataplanedeployment: openstack-edpm-tls
        openstackdataplanenodeset: openstack-edpm-tls
        openstackdataplaneservice: install-certs-ovrd
    spec:
      containers:
      - args:
        - ansible-runner
        - run
        - /runner
        - -p
        - playbook.yaml
        - -i
        - install-certs-ovrd-openstack-edpm-tls-openstack-edpm-tls
        env:
        - name: ANSIBLE_FORCE_COLOR
          value: "True"
        - name: RUNNER_PLAYBOOK
          value: |2+

            - hosts: localhost
              gather_facts: no
              name: kuttl play
              tasks:
                - name: Sleep
                  command: sleep 1
                  delegate_to: localhost


        - name: RUNNER_EXTRA_VARS
          value: |2+

            edpm_override_hosts: openstack-edpm-tls
            edpm_service_type: install-certs-ovrd


        imagePullPolicy: Always
        name: install-certs-ovrd-openstack-edpm-tls-openstack-edpm-tls
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/openstack/cacerts/install-certs-ovrd
          name: install-certs-ovrd-combined-ca-bundle
        - mountPath: /var/lib/openstack/certs/tls-dnsnames/default
          name: openstack-edpm-tls-tls-dnsnames-default-certs-0
        - mountPath: /var/lib/openstack/certs/tls-dnsnames/second
          name: openstack-edpm-tls-tls-dnsnames-second-certs-0
        - mountPath: /var/lib/openstack/cacerts/tls-dnsnames
          name: tls-dnsnames-combined-ca-bundle
        - mountPath: /runner/env/ssh_key
          name: ssh-key
          subPath: ssh_key
        - mountPath: /runner/inventory/hosts
          name: inventory
          subPath: inventory
      restartPolicy: Never
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: openstack-edpm-tls
      serviceAccountName: openstack-edpm-tls
      terminationGracePeriodSeconds: 30
      volumes:
      - name: install-certs-ovrd-combined-ca-bundle
        secret:
          defaultMode: 420
          secretName: combined-ca-bundle
      - name: openstack-edpm-tls-tls-dnsnames-default-certs-0
        projected:
          defaultMode: 420
          sources:
          - secret:
              name: openstack-edpm-tls-tls-dnsnames-default-certs-0
      - name: openstack-edpm-tls-tls-dnsnames-second-certs-0
        projected:
          defaultMode: 420
          sources:
          - secret:
              name: openstack-edpm-tls-tls-dnsnames-second-certs-0
      - name: tls-dnsnames-combined-ca-bundle
        secret:
          defaultMode: 420
          secretName: combined-ca-bundle
      - name: ssh-key
        secret:
          defaultMode: 420
          items:
          - key: ssh-privatekey
            path: ssh_key
          secretName: dataplane-ansible-ssh-private-key-secret
      - name: inventory
        secret:
          defaultMode: 420
          items:
          - key: inventory
            path: inventory
          secretName: dataplanenodeset-openstack-edpm-tls
status:
  ready: 0
  succeeded: 1
  terminating: 0
  uncountedTerminatedPods: {}
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: openstackansibleee
    openstackdataplanedeployment: openstack-edpm-tls
    openstackdataplanenodeset: openstack-edpm-tls
    openstackdataplaneservice: tls-dnsnames
  name: tls-dnsnames-openstack-edpm-tls-openstack-edpm-tls
  namespace: openstack-kuttl-tests
  ownerReferences:
  - apiVersion: dataplane.openstack.org/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: OpenStackDataPlaneDeployment
    name: openstack-edpm-tls
spec:
  backoffLimit: 6
  completionMode: NonIndexed
  completions: 1
  manualSelector: false
  parallelism: 1
  podReplacementPolicy: TerminatingOrFailed
  suspend: false
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: '[]'
      creationTimestamp: null
      labels:
        app: openstackansibleee
        batch.kubernetes.io/job-name: tls-dnsnames-openstack-edpm-tls-openstack-edpm-tls
        openstackdataplanedeployment: openstack-edpm-tls
        openstackdataplanenodeset: openstack-edpm-tls
        openstackdataplaneservice: tls-dnsnames
    spec:
      containers:
      - args:
        - ansible-runner
        - run
        - /runner
        - -p
        - playbook.yaml
        - -i
        - tls-dnsnames-openstack-edpm-tls-openstack-edpm-tls
        env:
        - name: ANSIBLE_FORCE_COLOR
          value: "True"
        - name: RUNNER_PLAYBOOK
          value: |2+

            - hosts: localhost
              gather_facts: no
              name: kuttl play
              tasks:
                - name: Sleep
                  command: sleep 1
                  delegate_to: localhost


        - name: RUNNER_EXTRA_VARS
          value: |2+

            edpm_override_hosts: openstack-edpm-tls
            edpm_service_type: tls-dnsnames


        imagePullPolicy: Always
        name: tls-dnsnames-openstack-edpm-tls-openstack-edpm-tls
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/openstack/cacerts/tls-dnsnames
          name: tls-dnsnames-combined-ca-bundle
        - mountPath: /runner/env/ssh_key
          name: ssh-key
          subPath: ssh_key
        - mountPath: /runner/inventory/hosts
          name: inventory
          subPath: inventory
      restartPolicy: Never
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: openstack-edpm-tls
      serviceAccountName: openstack-edpm-tls
      terminationGracePeriodSeconds: 30
      volumes:
      - name: tls-dnsnames-combined-ca-bundle
        secret:
          defaultMode: 420
          secretName: combined-ca-bundle
      - name: ssh-key
        secret:
          defaultMode: 420
          items:
          - key: ssh-privatekey
            path: ssh_key
          secretName: dataplane-ansible-ssh-private-key-secret
      - name: inventory
        secret:
          defaultMode: 420
          items:
          - key: inventory
            path: inventory
          secretName: dataplanenodeset-openstack-edpm-tls
status:
  ready: 0
  succeeded: 1
  terminating: 0
  uncountedTerminatedPods: {}
